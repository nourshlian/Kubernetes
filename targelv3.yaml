apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      run: web
  template:
    metadata:
      labels:
        run: web
    spec:
      containers:
      - image: gcr.io/wideops-candidate5/nodeapp@sha256:f2feb91739b0c5727ede74662939204e8ee429c37352555676be0d7eb3801d9d
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          # You must specify requests for CPU to autoscale
          # based on CPU utilization
          requests:
            cpu: "250m"
        volumeMounts:
          - name: pvc-demo
            mountPath: /mnt
            readOnly: true
      volumes:
        - name: pvc-demo
          persistentVolumeClaim:
            claimName: pvc-demo
            readOnly: true
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: web
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 10
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: web
  type: NodePort
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: basic-ingress
spec:
  tls:
  - secretName: testtest-com-tls
  backend:
    serviceName: web
    servicePort: 8080
# ---
# # pvc-demo.yaml
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: pvc-demo
# spec:
#   accessModes:
#     - ReadOnlyMany 
#   resources:
#     requests:
#       storage: 10Gi
# # ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: pvc-demo
# spec:
#   storageClassName: ""
#   capacity:
#     storage: 10Gi
#   accessModes:
#     - ReadOnlyMany
#   claimRef:
#     namespace: default
#     name: pvc-demo
#   gcePersistentDisk:
#     pdName: 35.223.131.240/mnt/disks/podstorage
#     fsType: ext4
#     readOnly: true
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-readonly-pv
spec:
  storageClassName: ""
  capacity:
    storage: 10Gi
  accessModes:
    - ReadOnlyMany
  claimRef:
    namespace: default
    name: pvc-demo
  gcePersistentDisk:
    pdName: gce-nfs-disk-test
    fsType: ext4
    readOnly: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-demo
spec:
  # Specify "" as the storageClassName so it matches the PersistentVolume's StorageClass.
  # A nil storageClassName value uses the default StorageClass. For details, see
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  storageClassName: ""
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: pod-pvc
# spec:
#   containers:
#   - image: gcr.io/wideops-candidate5/nodeapp@sha256:f2feb91739b0c5727ede74662939204e8ee429c37352555676be0d7eb3801d9d
#     name: test
#     volumeMounts:
#     - mountPath: /test-mnt
#       name: my-volume
#       readOnly: true
#   volumes:
#   - name: my-volume
#     persistentVolumeClaim:
#       claimName: pvc-demo
#       readOnly: true